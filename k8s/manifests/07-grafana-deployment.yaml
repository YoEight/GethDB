apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-datasources  # <-- This one!
  namespace: geth-app
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-service:9090
      access: proxy
      isDefault: true
      editable: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-dashboards
  namespace: geth-app
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: geth-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "changeit"
        volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana
          - name: geth-engine-dashboard
            mountPath: /var/lib/grafana/dashboards
          - name: grafana-provisioning-dashboards
            mountPath: /etc/grafana/provisioning/dashboards
          - name: grafana-provisioning-datasources
            mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: geth-engine-dashboard
          configMap:
            name: geth-engine-dashboard
        - name: grafana-provisioning-dashboards
          configMap:
            name: grafana-provisioning-dashboards
        - name: grafana-provisioning-datasources
          configMap:
            name: grafana-provisioning-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: geth-app
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
  type: NodePort
